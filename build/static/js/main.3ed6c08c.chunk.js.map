{"version":3,"sources":["../node_modules/typescript/lib sync","steps/components/SubHead.jsx","steps/hooks/useInProp.jsx","steps/SelectType.jsx","steps/components/Buttons.jsx","steps/components/TextInput.jsx","helpers/url-helper.js","steps/EnterDomain.jsx","steps/CreateAccount.jsx","steps/GscVerify.jsx","steps/components/CheckBox.jsx","steps/SelectGscDomains.jsx","steps/SetupComplete.jsx","steps/components/Select.jsx","steps/TrackBacklinks.jsx","App.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","SubHead","props","className","extraClasses","text","useInProp","movePrev","moveNext","useState","inProp","setInProp","moveDirection","setMoveDirection","moveValue","setMoveValue","startMoveback","startMoveNext","val","move","SelectType","state","setState","parentMoveNext","parentMovePrev","entryDirection","prev","showPrev","showNext","freeOptionRef","useRef","proOptionRef","handleClick","account","accountType","CSSTransition","nodeRef","in","onExited","timeout","appear","exit","classNames","appearActive","exitActive","ref","onClick","type","fill","viewBox","xmlns","fillRule","d","clipRule","Buttons","back","next","TextInput","labelRef","label","htmlFor","onChange","placeholder","placeHolder","required","defaultValue","value","hideValidation","showValidation","mountOnEnter","unmountOnExit","enter","appearDone","enterActive","enterDone","exitDone","valMessage","isUrl","str","test","EnterDomain","domainRef","console","log","domains","length","domain","setDomain","nextEnable","setNextEnable","setShowValidation","handleChange","event","eventVal","target","clearTimeout","window","validateTimer","setTimeout","validate","CreateAccount","emailValid","setEmailValid","passValid","setPassValid","emailValidationMessage","setEmailValidationMessage","passValidationMessage","setPassValidationMessage","slideRef","action","method","email","valid","EmailValidator","validateEmail","password","pass","validatePass","src","alt","GscVerify","CheckBox","checked","disabled","key","selected","name","parentChange","labelMaxChar","persist","title","slice","trimLabel","SelectGscDomains","filter","urls","remaining","buttonStyle","showMessage","map","i","indexOf","SetupComplete","Select","values","labelCharacters","onSelect","showOptions","setShowOptions","valueStates","setValueStates","find","obj","currentSelection","setCurrentSelection","maxLabelCharacter","chopString","string","handleSelection","dataset","useEffect","onFocus","onBlur","aria-haspopup","aria-expanded","role","aria-orientation","aria-labelledby","index","onMouseDown","data-label","data-value","href","stroke","strokeLinecap","strokeLinejoin","strokeWidth","TrackBacklinks","showSelect","links","hasOwnProperty","provider","linkData","setLinkData","newData","cols","rows","App","gscToken","details","setDetails","currentSlide","setCurrentSlide","setLastValue","slideHistory","setSlideHistory","slideConnections","component","free","pro","height","0","TrackBacklinksFree","TrackBacklinksPro","newSH","pop","wizardStyle","h","w","innerWidth","getHeight","style","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3ed6c08c.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 29;","import React from \"react\";\r\n\r\nexport default function SubHead(props) {\r\n  return <h3 className={\"font-medium text-xl text-center \" + props.extraClasses}>{props.text}</h3>;\r\n}\r\n","import React, {useState, useRef} from 'react';\n\nexport default function useInProp(movePrev, moveNext) {\n\n    //animation logic\n    const [inProp, setInProp] = useState(true);\n    const [moveDirection, setMoveDirection] = useState(null);\n    const [moveValue, setMoveValue] = useState(null);\n\n\n\n    function move() {\n        if (moveDirection === \"prev\") \n            movePrev();\n        if (moveDirection === \"next\") \n            moveNext(moveValue);\n        }\n    \n    function startMoveback() {\n        setMoveDirection(\"prev\");\n        setInProp(false);\n    }\n\n    function startMoveNext(val = null) {\n        setMoveValue(val);\n        setMoveDirection(\"next\");\n        setInProp(false);\n    }\n\n    return {inProp, startMoveback, startMoveNext, move, moveDirection, moveValue}\n}","import React, { useState, useRef } from \"react\";\r\nimport SubHead from \"./components/SubHead\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport useInProp from './hooks/useInProp'; \r\n\r\nexport default function SelectType({state, setState, moveNext : parentMoveNext, movePrev: parentMovePrev, entryDirection, prev, showPrev, showNext}) {\r\n  // const [inProp, setInProp] = useState(true);\r\n  // const [val, setVal] = useState(null);\r\n  const freeOptionRef = useRef(null);\r\n  const proOptionRef = useRef(null);\r\n\r\n  const {inProp, startMoveback, startMoveNext, move, moveDirection, moveValue} = useInProp(parentMovePrev, parentMoveNext);\r\n\r\n  let selectedOutAnimation = \"animate__animated animate__fadeOut\";\r\n  let notSelectedOutAnimation = \"animate__animated animate__fadeOutLeft\";\r\n\r\n  // function moveNext() {\r\n  //   console.log(\"Moving next from SelectType value: \" + val);\r\n  //   props.moveNext(val);\r\n  // }\r\n\r\n  // function handleMove(val) {\r\n  //   setVal(val);\r\n  //   setInProp(false);\r\n  // }\r\n\r\n  function handleClick(account){\r\n\r\n    setState(prev => ({...prev, accountType: account}))\r\n\r\n    startMoveNext(account);\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n      nodeRef={freeOptionRef}\r\n        in={inProp}\r\n        // onExited={() => moveNext()}\r\n        onExited={move}\r\n        timeout={{\r\n          appear: 550,\r\n          exit: 550\r\n        }}\r\n        appear={true}\r\n        classNames={{\r\n          appearActive: \"animate__animated animate__zoomIn\",\r\n          exitActive:\r\n          moveValue === \"free\" ? selectedOutAnimation : notSelectedOutAnimation\r\n        }}\r\n      >\r\n        <div ref={freeOptionRef}>\r\n          <SubHead text=\"Free\" />\r\n\r\n          <div className=\"w-8/12 mx-auto mt-4\">\r\n            <ul className=\"list-disc\">\r\n              <li className=\"mb-1\">\r\n                Verify domain ownership with Google Search Console (Required)\r\n              </li>\r\n              <li className=\"mb-1\">Track up to 3 domains for free</li>\r\n              <li className=\"mb-1\">1,000 URLs per domain watched</li>\r\n              <li className=\"mb-1\">Free Forever</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <button\r\n            // onClick={() => handleMove(\"free\")}\r\n            onClick={() => handleClick(\"free\")}\r\n            type=\"submit\"\r\n            className=\"mt-8 mx-auto flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition duration-150 ease-in-out\"\r\n          >\r\n            Start Free\r\n            <svg\r\n              className=\"ml-2 w-6 h-6\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                clipRule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n      nodeRef={proOptionRef}\r\n        in={inProp}\r\n        // onExited={() => moveNext()}\r\n        onExited={move}\r\n        timeout={{\r\n          appear: 550,\r\n          exit: 550\r\n        }}\r\n        appear={true}\r\n        classNames={{\r\n          appearActive: \"animate__animated animate__zoomIn\",\r\n          exitActive:\r\n          moveValue === \"pro\" ? selectedOutAnimation : notSelectedOutAnimation\r\n        }}\r\n      >\r\n        <div ref={proOptionRef} className=\"mt-6\">\r\n          <div className=\"relative mb-4\">\r\n            <div className=\"absolute inset-0 flex items-center\">\r\n              <div className=\"w-full border-t border-gray-300\" />\r\n            </div>\r\n            <div className=\"relative flex justify-center text-sm leading-5\">\r\n              <span className=\"px-2 bg-white text-gray-500\">Or</span>\r\n            </div>\r\n          </div>\r\n\r\n          <SubHead text=\"Pro\" />\r\n\r\n          <div className=\"w-8/12 mx-auto mt-4\">\r\n            <ul className=\"list-disc\">\r\n              <li className=\"mb-1\">No verification required</li>\r\n              <li className=\"mb-1\">Additional domains $7 each</li>\r\n              <li className=\"mb-1\">10,000 links watched per domain</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"mt-8 mx-auto flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition duration-150 ease-in-out\"\r\n            onClick={() => handleClick(\"pro\")}\r\n          >\r\n            Choose Pro ($7)\r\n            <svg\r\n              className=\"ml-2 w-6 h-6\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                clipRule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport { isGetAccessor } from \"typescript\";\r\n\r\nexport default function Buttons({\r\n    moveNext: parentMoveNext,\r\n    movePrev: parentMovePrev,\r\n    back,\r\n    next,\r\n    showPrev = true,\r\n    showNext = true\r\n}) {\r\n    // const [status, setStatus] = useState({ });\r\n    function moveNext(){\r\n      if(next) parentMoveNext();\r\n    }\r\n    function movePrev(){\r\n      if(back) parentMovePrev();\r\n    }\r\n\r\n    let nextEnabled = \"inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 f\" +\r\n            \"ont-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline\" +\r\n            \"-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 t\" +\r\n            \"ransition ease-in-out duration-150\";\r\n    let nextDisabled = \"cursor-not-allowed  inline-flex items-center px-4 py-2 border border-transparent\" +\r\n            \" text-sm leading-5 font-medium rounded-md text-white bg-gray-300 focus:outline-n\" +\r\n            \"one  tra\" +\r\n            \"nsition ease-in-out duration-150\";\r\n    let backEnabled = \"inline-flex items-center px-4 py-2 border border-gray-300 text-sm leading-4 font\" +\r\n            \"-medium rounded-md text-gray-700 bg-white hover:text-gray-500 focus:outline-none\" +\r\n            \" focus:border-blue-300 focus:shadow-outline-blue active:text-gray-800 active:bg-\" +\r\n            \"gray-50 transition ease-in-out duration-150\";\r\n    let backDisabled = \"cursor-not-allowed  inline-flex items-center px-4 py-2 border border-gray-300 te\" +\r\n            \"xt-sm leading-4 font-medium rounded-md text-gray-400 bg-white  transition ease-i\" +\r\n            \"n-out duration-150\";\r\n\r\n    return (\r\n        <div className=\"buttons mt-4\">\r\n            {showPrev && <span className=\"float-left rounded-md shadow-sm\">\r\n                <button\r\n                    onClick={movePrev}\r\n                    type=\"button\"\r\n                    className={back === true\r\n                    ? backEnabled\r\n                    : backDisabled}>\r\n                    <svg\r\n                        className=\"mr-1 h-5 w-5\"\r\n                        fill=\"currentColor\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\r\n                            clipRule=\"evenodd\"></path>\r\n                    </svg>\r\n                    Back\r\n                </button>\r\n            </span>\r\n}\r\n\r\n            {showNext && <span className=\"float-right rounded-md shadow-sm\">\r\n                <button\r\n                    type=\"button\"\r\n                    className={next === true\r\n                    ? nextEnabled\r\n                    : nextDisabled}\r\n                    onClick={moveNext}>\r\n                    Next\r\n                    <svg\r\n                        className=\"ml-2 -mr-1 h-5 w-5\"\r\n                        fill=\"currentColor\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                            clipRule=\"evenodd\"></path>\r\n                    </svg>\r\n                </button>\r\n            </span>\r\n}\r\n\r\n            <div className=\"clear-both\"></div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\n\r\nexport default function TextInput(props) {\r\n\r\n  const labelRef = useRef(null);\r\n\r\n  return (\r\n    <div>\r\n\r\n      {props.label &&\r\n        <label\r\n          htmlFor=\"email\"\r\n          className=\"block text-sm font-medium leading-5 text-gray-700\"\r\n        >\r\n          {props.label}\r\n        </label>\r\n      }\r\n      <div className=\"mt-1 rounded-md shadow-sm z-10\">\r\n        <input\r\n        \r\n        onChange={props.onChange}\r\n          id={props.id}\r\n          type={props.type ?? \"text\"}\r\n          className=\"appearance-none z-10 relative block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:shadow-outline-blue focus:border-blue-300 transition duration-150 ease-in-out sm:text-sm sm:leading-5\"\r\n          placeholder={props.placeHolder}\r\n          required={props.required ?? false}\r\n          defaultValue={props.defaultValue}\r\n          value={props.value}\r\n          \r\n        />\r\n        </div>\r\n        <div className={(props.hideValidation ? \"hidden\" : \"\") + \" h-6\"}>\r\n        <CSSTransition\r\n          in={props.showValidation ?? false}\r\n          mountOnEnter\r\n          unmountOnExit\r\n          // in={true}\r\n          // timeout={{\r\n          //   appear: 1000,\r\n          // }}\r\n          timeout={{\r\n            appear: 0,\r\n            enter: 0,\r\n            exit: 800,\r\n           }}\r\n          appear={true}\r\n          nodeRef={labelRef}\r\n          classNames={{\r\n            appear: 'my-appear',\r\n            appearActive: 'animate__animated animate__fadeInDown',\r\n            appearDone: 'my-done-appear',\r\n            enter: 'my-enter',\r\n            enterActive: 'animate__animated animate__slideInDown',\r\n            enterDone: 'animate__animated animate__slideInDown',\r\n            exit: 'animate__animated animate__slideOutUp',\r\n            exitActive: 'animate__animated animate__slideOutUp',\r\n            exitDone: 'animate__animated animate__slideOutUp',\r\n           }}\r\n        >\r\n          <div ref={labelRef} \r\n          // className={(props.showValidation ? \"\" : \"opacity-0\") + \" z-0\"}\r\n          >\r\n          <p className={\" validation text-sm mb-1 text-red-600 z-0 h-6\"}>\r\n            {props.valMessage}\r\n          </p>\r\n          </div>\r\n\r\n        </CSSTransition>\r\n        </div>\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n","export default function isUrl(str) {\r\n  let regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\r\n  if (regexp.test(str)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport Buttons from \"./components/Buttons\";\r\nimport TextInput from \"./components/TextInput\";\r\nimport isValidDomain from \"is-valid-domain\";\r\nimport isUrl from \"../helpers/url-helper\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport useInProp from './hooks/useInProp';\r\n\r\nexport default function EnterDomain(props) {\r\n  const [valMessage, setValMessage] = useState(\"invisible\");\r\n  \r\n  const [prevEnable, setPrevEnable] = useState(props.prev);\r\n  const {\r\n    inProp,\r\n    startMoveback,\r\n    startMoveNext,\r\n    move,\r\n    moveDirection,\r\n    moveValue\r\n} = useInProp(props.movePrev, props.moveNext);\r\n\r\n  const domainRef = useRef(null);\r\n\r\n  console.log(props.state.domains.length)\r\n\r\n  const [domain, setDomain] = useState(props.state.domains.length > 0 ? props.state.domains[0] : \"\");\r\n  const [nextEnable, setNextEnable] = useState(isUrl(domain));\r\n\r\n  const [showValidation, setShowValidation] = useState(false);\r\n\r\n  function validate(val) {\r\n    // console.log(\"Validate \" + val);\r\n    // if (!isUrl(val)) {\r\n    //   setValMessage(\"\");\r\n    // }\r\n    // else {\r\n    //   setValMessage(\"invisible\");\r\n    // }\r\n\r\n    if (!isUrl(val) && !showValidation) {\r\n      setShowValidation(true);\r\n    }\r\n    \r\n    if (isUrl(val) && showValidation) {\r\n      setShowValidation(false);\r\n    }\r\n  }\r\n\r\n  function handleChange(event) {\r\n    let eventVal = event.target.value\r\n    if (isUrl(eventVal)) {\r\n      // console.log(event.target.value + \" is url\");\r\n      setNextEnable(true);\r\n      props.setState(prev => ({...prev, domains: [eventVal]}))\r\n    } else {\r\n      setNextEnable(false);\r\n      // console.log(event.target.value + \" is NOT url\");\r\n    }\r\n\r\n    setDomain(eventVal);\r\n    \r\n    clearTimeout(window.validateTimer);\r\n    window.validateTimer = setTimeout(\r\n      (val) => {\r\n        // console.log(\"Trigger:\" + val);\r\n        validate(val);\r\n      },\r\n      1000,\r\n      eventVal\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CSSTransition\r\n    nodeRef={domainRef}\r\n      in={inProp}\r\n      onExited={move}\r\n      timeout={{\r\n        appear: 550,\r\n        exit: 550\r\n      }}\r\n      appear={true}\r\n      classNames={{\r\n        appearActive: props.entryDirection === \"next\" ?  \"animate__animated animate__slideInRight\" : \"animate__animated animate__slideInLeft\",\r\n          exitActive:  moveDirection === \"next\" ? \"animate__animated animate__fadeOutLeft\" : \"animate__animated animate__fadeOutRight\"\r\n      }}\r\n    >\r\n      <div ref={domainRef}>\r\n        <h3 className=\"font-medium text-xl text-center mb-4\">Enter Domain</h3>\r\n        <p className=\"mb-4\">\r\n          Enter the domain that you want to monitor backlinks for (ownership\r\n          verification with GSC is required for free accounts)\r\n        </p>\r\n\r\n        <TextInput \r\n          showValidation={showValidation} \r\n          valMessage=\"Please enter a valid domain to continue\"  \r\n          placeHolder=\"https://example.com\"\r\n          label=\"Domain\"\r\n          onChange={(event) => handleChange(event)}\r\n          value={domain}\r\n        />\r\n        <p className=\"mb-8 text-sm italic\">\r\n          You will be able to add in more domains to track later\r\n        </p>\r\n        <Buttons\r\n          back={true}\r\n          next={nextEnable}\r\n          movePrev={startMoveback}\r\n          moveNext={startMoveNext}\r\n        />\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n}\r\n","import React, {useState, useRef} from \"react\";\r\nimport Buttons from \"./components/Buttons\";\r\nimport SubHead from \"./components/SubHead\";\r\nimport TextInput from \"./components/TextInput\";\r\nimport * as EmailValidator from 'email-validator';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport useInProp from './hooks/useInProp'; \r\n\r\nexport default function CreateAccount({state, setState, moveNext : parentMoveNext, movePrev: parentMovePrev, entryDirection, prev, showPrev, showNext}) {\r\n\r\n    const [emailValid, setEmailValid] = useState(false);\r\n    const [passValid, setPassValid] = useState(false);\r\n    const [emailValidationMessage, setEmailValidationMessage] = useState(null);\r\n    const [passValidationMessage, setPassValidationMessage] = useState(null);\r\n    const slideRef= useRef(null);\r\n\r\n\r\n    const {inProp, startMoveback, startMoveNext, move, moveDirection, moveValue} = useInProp(parentMovePrev, parentMoveNext);\r\n\r\n    function validateEmail(event) {\r\n\r\n        let email = event.target.value;\r\n        // if (EmailValidator.validate(email)) \r\n        setState(prev => ({...prev, email: email}));\r\n\r\n        let valid = EmailValidator.validate(email)\r\n        setEmailValid(valid);\r\n\r\n        clearTimeout(window.validateTimer);\r\n        window.validateTimer = setTimeout((val) => {\r\n            if (!val) setEmailValidationMessage(\"Please enter a valid email address\");\r\n            \r\n        }, 1000, valid);\r\n    }\r\n\r\n    function validatePass(event) {\r\n\r\n        let pass = event.target.value;\r\n        console.log({...state, password: pass});\r\n        setState(prev => ({...prev, password: pass}));\r\n\r\n        let valid = pass.length >= 6\r\n        setPassValid(valid);\r\n\r\n        clearTimeout(window.validateTimer);\r\n        window.validateTimer = setTimeout((val) => {\r\n            if(!val) setPassValidationMessage(\"Password must be 6 or more characters\");\r\n        }, 1000, valid);\r\n    }\r\n\r\n    return (\r\n      <CSSTransition\r\n      nodeRef={slideRef}\r\n        in={inProp}\r\n        onExited={move}\r\n        timeout={{\r\n          appear: 550,\r\n          exit: 550\r\n        }}\r\n        appear={true}\r\n        classNames={{\r\n          appearActive: entryDirection === \"next\" ?  \"animate__animated animate__slideInRight\" : \"animate__animated animate__slideInLeft\",\r\n          exitActive:  moveDirection === \"next\" ? \"animate__animated animate__fadeOutLeft\" : \"animate__animated animate__fadeOutRight\"\r\n        }}\r\n      >\r\n        <div ref={slideRef}>\r\n            <SubHead text=\"Create a login to add links to watch\"/>\r\n\r\n            <div className=\"mt-6\">\r\n                <form className=\"mb-8\" action=\"#\" method=\"POST\">\r\n                    <div>\r\n                        <TextInput\r\n                            showValidation={(emailValid === false && emailValidationMessage !== null)}\r\n                            valMessage={emailValidationMessage}\r\n                            defaultValue={state.email}\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            required={true}\r\n                            label=\"Email Address\"\r\n                            onChange={(event) => validateEmail(event)}/>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <TextInput\r\n                            showValidation={(passValid === false && passValidationMessage !== null)}\r\n                            // showValidation={true}\r\n                            valMessage={passValidationMessage}\r\n                            defaultValue={state.password}\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            required={true}\r\n                            label=\"Password\"\r\n                            onChange={(event) => validatePass(event)}/>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n                <Buttons\r\n                    back={true}\r\n                    next={emailValid && passValid}\r\n                    // movePrev={props.movePrev}\r\n                    // moveNext={props.moveNext}\r\n                    movePrev={() => startMoveback()}\r\n                    moveNext={() => startMoveNext()}\r\n                    \r\n                    />\r\n                <div className=\"mt-6\">\r\n                    <div className=\"relative\">\r\n                        <div className=\"absolute inset-0 flex items-center\">\r\n                            <div className=\"w-full border-t border-gray-300\"/>\r\n                        </div>\r\n                        <div className=\"relative flex justify-center text-sm leading-5\">\r\n                            <span className=\"px-2 bg-white text-gray-500\">\r\n                                Or continue with\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text-center w-3/4 mx-auto\">\r\n                        <img onClick={() => startMoveNext()} className=\"mx-auto h-14 mt-3\" src=\"img/google-signin.png\" alt=\"\"/>\r\n                        <img onClick={() => startMoveNext()} className=\"mx-auto h-12 mt-3\" src=\"img/facebook_login.png\" alt=\"\"/>\r\n                        <img onClick={() => startMoveNext()} className=\"mx-auto mt-3\" src=\"img/signin-button-linkedin.png\" alt=\"\"/>\r\n                        <img onClick={() => startMoveNext()} className=\"mx-auto mt-3\" src=\"img/sign-in-with-twitter.png\" alt=\"\"/>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        </CSSTransition>\r\n    );\r\n}\r\n","import React, {useState, useRef} from \"react\";\nimport Buttons from \"./components/Buttons\";\nimport {CSSTransition} from \"react-transition-group\";\nimport SubHead from \"./components/SubHead\";\nimport useInProp from './hooks/useInProp'; \n\nexport default function GscVerify({state, setState, moveNext : parentMoveNext, movePrev: parentMovePrev, entryDirection, prev, showPrev, showNext}) {\n\n    const {inProp, startMoveback, startMoveNext, move, moveDirection, moveValue} = useInProp(parentMovePrev, parentMoveNext);\n\n    const slideRef = useRef(null);\n\n    return (\n        <CSSTransition\n      nodeRef={slideRef}\n        in={inProp}\n        onExited={move}\n        timeout={{\n          appear: 550,\n          exit: 550\n        }}\n        appear={true}\n        classNames={{\n          appearActive: \"animate__animated animate__fadeIn\" ,\n          exitActive:  \"animate__animated animate__bounceOutUp\"\n        }}\n      >\n        <div ref={slideRef}>\n            <SubHead text=\"You may import up to 3 domains from GSC for free.\"/>\n\n            <img className=\"mx-auto w-1/2 m-8\" src=\"img/gsc.png\" alt=\"\"/>\n            <div className=\"text-center\">\n            <button\n            onClick={() => startMoveNext()}\n                className=\"mx-auto inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition ease-in-out duration-150\">\n                Import\n                <svg\n                    className=\"ml-2 -mr-1 h-5 w-5\"\n                    fill=\"currentColor\"\n                    viewBox=\"0 0 20 20\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                        clipRule=\"evenodd\"></path>\n                </svg>\n            </button>\n            </div>\n\n        </div>\n        </CSSTransition>\n    );\n}","import React, {useState} from 'react';\n\nexport default function CheckBox({\n    checked,\n    disabled,\n    key,\n    label,\n    selected,\n    name,\n    value,\n    onChange: parentChange,\n    labelMaxChar\n}) {\n\n    function trimLabel(label)\n    {\n\n        if(label.length > labelMaxChar ?? 20)\n        {\n            return label.slice(0, labelMaxChar ?? 20) + \"...\";\n        }\n        else{\n            return label;\n        }\n        \n    }\n\n    return <label key={key} className=\"\">\n        <input id={name} name={name} value={value}  \n            onChange={(e) => {\n                e.persist();\n                parentChange(e);\n            }}\n\n            type=\"checkbox\" className=\"form-checkbox ml-2 h-5 w-5 text-gray-600\" disabled={disabled} checked={checked}/>\n        <span\n            className={\"ml-2 \" + (checked\n            ? \"font-semibold \"\n            : \"\") + (disabled\n            ? \"text-gray-400\"\n            : \"text-gray-700\")\n            }\n            title={label}\n            >{trimLabel(label)}</span>\n    </label>\n\n}","import React, {useState, useRef} from \"react\";\nimport Buttons from \"./components/Buttons\";\nimport {CSSTransition} from \"react-transition-group\";\nimport SubHead from \"./components/SubHead\";\nimport CheckBox from \"./components/CheckBox\";\nimport useInProp from './hooks/useInProp';\n\nexport default function SelectGscDomains({\n    state,\n    setState,\n    moveNext: parentMoveNext,\n    movePrev: parentMovePrev,\n    entryDirection,\n    prev,\n    showPrev,\n    showNext\n}) {\n\n    // const [selected,\n    //     setSelected] = useState([]);\n    const {\n        inProp,\n        startMoveback,\n        startMoveNext,\n        move,\n        moveDirection,\n        moveValue\n    } = useInProp(parentMovePrev, parentMoveNext);\n    const slideRef = useRef(null);\n\n    let domains = [\n        \"example1.com\",\n        \"exampleofaverylongdomainnamewhoevenhasadomainnamethislonglikeseriouslywtf.com\",\n        \"example3.com\",\n        \"example4.com\",\n        \"example5.com\",\n        \"example6.com\",\n        \"example7.com\",\n        \"example8.com\",\n        \"example9.com\",\n        \"example10.com\",\n        \"example11.com\",\n        \"example12.com\",\n        \"example13.com\",\n        \"example14.com\",\n        \"example15.com\",\n        \"example16.com\"\n    ];\n\n    function handleChange(event) {\n\n        console.log(event.target.name);\n        console.log(event.target.value);\n        console.log(event.target.checked);\n\n        if (event.target.checked) {\n\n            setState(prev => ({...prev, domains: [...prev.domains, event.target.value]}))\n            // setSelected((prev) => [\n            //     ...prev,\n            //     event.target.name\n            // ]);\n        } else {\n            setState(prev => ({...prev, domains: prev.domains.filter((name) => name !== event.target.value)}));\n            // setSelected((prev) => prev.filter((name) => name !== event.target.name));\n        }\n\n        setState(prev => ({...prev, urls: []}));\n\n    }\n\n    function handleClick(event) {\n        if (state.domains.length > 0) \n            startMoveNext();\n        }\n    \n    const remaining = 3 - state.domains.length;\n\n    const buttonStyle = state.domains.length > 0\n        ? \"inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 f\" +\n            \"ont-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline\" +\n                \"-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 t\" +\n                \"ransition ease-in-out duration-150\"\n        : \"cursor-not-allowed  inline-flex items-center px-4 py-2 border border-transparent\" +\n            \" text-sm leading-5 font-medium rounded-md text-white bg-gray-300 focus:outline-n\" +\n                \"one  transition ease-in-out duration-150\";\n\n    const showMessage = state.domains.length >= 3\n        ? \"\"\n        : \"opacity-0\"\n\n    return (\n        <CSSTransition\n            nodeRef={slideRef}\n            in={inProp}\n            onExited={move}\n            timeout={{\n            appear: 550,\n            exit: 550\n        }}\n            appear={true}\n            classNames={{\n                appearActive: entryDirection === \"next\" ?  \"animate__animated animate__slideInRight\" : \"animate__animated animate__slideInLeft\",\n                exitActive:  moveDirection === \"next\" ? \"animate__animated animate__fadeOutLeft\" : \"animate__animated animate__fadeOutRight\"\n        }}>\n            <div ref={slideRef} className=\"\">\n                <SubHead text={remaining + \" Free domains remaining\"} extraClasses=\"mb-4\"/>\n                <div\n                    className=\"p-4 border border-gray-300 max-h-300 scroll-y overflow-hidden overflow-y-auto\">\n\n                    {domains.map((domain, i) => {\n                        // const checked = state.domains.indexOf(\"checkbox_\" + domain) > -1;\n                        const checked = state.domains.indexOf(domain) > -1;\n                        return (\n                            <div key={i} className=\"odd:bg-gray-200  p-2\">\n                                <CheckBox\n                                    checked={checked}\n                                    disabled={!checked && remaining === 0}\n                                    labelMaxChar={26}\n                                    label={domain}\n                                    name={\"checkbox_\" + domain}\n                                    value={domain}\n                                    onChange={handleChange}/>\n                            </div>\n                        )\n                    })}\n                </div>\n                <p\n                    className={\"italic mt-3 w-2/3 mx-auto transition-all duration-500 \" + showMessage}>Domain limit can be increased for $7 per domain after setup</p>\n                <div className=\"text-center mt-6\">\n                    <button onClick={handleClick} className={buttonStyle}>\n                        Add Domains\n                        <svg\n                            className=\"ml-2 -mr-1 h-5 w-5\"\n                            fill=\"currentColor\"\n                            viewBox=\"0 0 20 20\"\n                            xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                fillRule=\"evenodd\"\n                                d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                                clipRule=\"evenodd\"></path>\n                        </svg>\n                    </button>\n\n                </div>\n\n            </div>\n        </CSSTransition>\n    )\n}","import React, {useState, useRef} from \"react\";\nimport Buttons from \"./components/Buttons\";\nimport {CSSTransition} from \"react-transition-group\";\nimport SubHead from \"./components/SubHead\";\nimport CheckBox from \"./components/CheckBox\";\nimport useInProp from './hooks/useInProp';\n\nexport default function SetupComplete({state})\n{\n    console.log(state);\n    const slideRef = useRef(null);\n    \n    return (\n        <CSSTransition\n        nodeRef={slideRef}\n          in={true}\n          timeout={{\n            appear: 550,\n            exit: 550\n          }}\n          appear={true}\n          classNames={{\n            appearActive: \"animate__animated animate__fadeIn\"\n          }}\n        >\n        <div ref={slideRef} className=\"text-center\">\n            <p>(Remember to confirm your email address by clicking the link in your email)</p>\n            <div className=\"text-left mt-6 leading-10\">\n                <h2 className=\"text-lg font-bold mb-4\">Account Details:</h2>\n                <p><strong>User: </strong>{state.email}</p>\n                <p><strong>Pass: </strong>******</p>\n                <p><strong>Type: </strong>Free</p>\n                <h2><strong>Domains:</strong></h2>\n                <ul className=\"list-disc list-inside pl-8\">\n                    {\n                        state.domains.map(domain => {\n                            return <li className=\"break-all\" key={domain}>{domain}</li>\n                        })\n                    }\n                </ul>\n            </div>\n            <button className= {\"mt-8 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 f\" +\n            \"ont-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline\" +\n                \"-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 t\" +\n                \"ransition ease-in-out duration-150\"}>\n                        Go To Dashboard\n                        <svg\n                            className=\"ml-2 -mr-1 h-5 w-5\"\n                            fill=\"currentColor\"\n                            viewBox=\"0 0 20 20\"\n                            xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                fillRule=\"evenodd\"\n                                d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                                clipRule=\"evenodd\"></path>\n                        </svg>\n                    </button>\n        </div>\n        </CSSTransition>\n        \n    )\n}","import React, {useState, useEffect} from 'react';\n\nexport default function Select({values, labelCharacters, onSelect}) {\n\n    const [showOptions,\n        setShowOptions] = useState(false);\n    const [valueStates,\n        setValueStates] = useState(values);\n    // const [currentSelection, setCurrentSelection] = useState(() => {     let obj\n    // = values.find((obj) => obj.selected === true);     onSelect(obj);     return\n    // obj; });\n    const [currentSelection,\n        setCurrentSelection] = useState(values.find((obj) => obj.selected === true));\n    const [maxLabelCharacter,\n        setmaxLabelCharacter] = useState(labelCharacters ?? 45);\n\n    useEffect(() => {\n        // console.log(\"in select\")\n        // console.log(currentSelection);\n        onSelect(currentSelection);\n        // if(currentSelection === {})\n        // {\n        //     onSelect(values.find((obj) => obj.selected === true))\n        // }\n        // else{\n        //     onSelect(currentSelection);\n        // }\n        \n    }, [currentSelection]);\n\n    function chopString(string) {\n        if (string.length > maxLabelCharacter) {\n            return string.slice(0, maxLabelCharacter) + \"...\";\n        }\n\n        return string;\n\n    }\n\n    function handleSelection(event) {\n        let selected = event.target.dataset.value;\n\n        let selectedObj = {};\n\n        setValueStates(prev => {\n            return prev.map(value => {\n\n                if (value.value == currentSelection.value) \n                    value.selected = false;\n                if (value.value === selected) {\n                    value.selected = true;\n                    setCurrentSelection(value);\n                }\n\n                return value;\n\n            })\n        })\n\n        // onSelect(currentSelection);\n    }\n\n    return (\n        <div\n            className=\"mt-4 relative inline-block text-left\"\n            className=\"relative inline-block text-left\">\n            <div>\n                <span className=\"rounded-md shadow-sm\">\n                    <button\n                        onFocus={() => setShowOptions(true)}\n                        onBlur={() => setShowOptions(false)}\n                        type=\"button\"\n                        className=\"inline-flex justify-center w-full rounded-md border border-gray-300 px-4 py-2 bg-white text-sm leading-5 font-medium text-gray-700 hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-50 active:text-gray-800 transition ease-in-out duration-150\"\n                        id=\"options-menu\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"true\">\n                        {chopString(currentSelection.value)}\n                        <svg\n                            className=\"-mr-1 ml-2 h-5 w-5\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            viewBox=\"0 0 20 20\"\n                            fill=\"currentColor\">\n                            <path\n                                fillRule=\"evenodd\"\n                                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                                clipRule=\"evenodd\"/>\n                        </svg>\n                    </button>\n                </span>\n            </div>\n\n            <div\n                className={(showOptions\n                ? \"visible\"\n                : \"invisible\") + \" origin-top-right absolute left-0 mt-2 min-w-56 rounded-md shadow-lg\"}>\n                <div className=\"rounded-md bg-white shadow-xs\">\n                    <div\n                        className=\"py-1\"\n                        role=\"menu\"\n                        aria-orientation=\"vertical\"\n                        aria-labelledby=\"options-menu\">\n\n                        {valueStates.map((value, index) => <a\n                            onMouseDown={handleSelection}\n                            key={index}\n                            data-label={value.label}\n                            data-value={value.value}\n                            href=\"#\"\n                            className=\"block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:outline-none focus:bg-gray-100 focus:text-gray-900\"\n                            role=\"menuitem\">\n                            {chopString(value.label)}\n                            {value.selected && <svg\n                                className=\"w-4 h-4 float-right\"\n                                fill=\"none\"\n                                stroke=\"currentColor\"\n                                viewBox=\"0 0 24 24\"\n                                xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M5 13l4 4L19 7\"></path>\n                            </svg>\n}\n                        </a>)\n}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, {useState, useRef, useEffect, useLayoutEffect} from \"react\";\nimport Buttons from \"./components/Buttons\";\nimport {CSSTransition} from \"react-transition-group\";\nimport SubHead from \"./components/SubHead\";\nimport useInProp from './hooks/useInProp';\nimport Select from './components/Select';\nimport TextInput from './components/TextInput';\nimport { isConstructSignatureDeclaration } from \"typescript\";\n\nexport default function TrackBacklinks({state, setState, moveNext: parentMoveNext, movePrev: parentMovePrev, entryDirection, showSelect = true}) {\n\n    const {\n        inProp,\n        startMoveback,\n        startMoveNext,\n        move,\n        moveDirection,\n        moveValue\n    } = useInProp(parentMovePrev, parentMoveNext);\n    const slideRef = useRef(null);\n\n    const [currentSelection, setCurrentSelection] = useState(\n        {\n            label: state.domains[0],\n            value: state.domains[0],\n            selected: true\n        }\n        );\n    const [linkData, setLinkData] = useState(() => {\n\n        let links = ({...state.links} ?? {});\n        for(const domain of state.domains){\n            if(!links.hasOwnProperty(domain))\n            {\n                links[domain] = {urls:\"\", provider:\"\"};\n            }\n        }\n        // console.log(\"Link data\")\n        // console.log(links);\n        return links;\n    });\n\n    let values = state.domains.map((domain, index) => {\n        return {\n            label: domain,\n            value: domain,\n            selected: index === 0\n        }\n    });\n\n    function saveLinks(event) {\n\n        const val = event.target.value\n        // console.log(val);\n\n        // setState(prev => {\n\n        //     let newState = ({...prev});\n\n        //     newState.links[currentSelection.value].urls= val;\n\n        //     console.log(newState);\n\n        //     return newState;\n        // })\n\n        setLinkData(prev => {\n            let newData = ({...linkData});\n            newData[currentSelection.value].urls = val;\n            return newData;\n        });\n\n        setState(prev => ({...state, links: linkData}));\n\n        // console.log(linkData);\n\n    }\n\n    function handleSelection(value)\n    {\n        // console.log(value);\n        setCurrentSelection(value);\n        // console.log(\"in parent\")\n        // console.log(value);\n    }\n\n    function handleProvider(event)\n    {\n        const val = event.target.value\n\n        setLinkData(prev => {\n            let newData = ({...linkData});\n            newData[currentSelection.value].provider = val;\n            return newData;\n        });\n\n        setState(prev => ({...state, links: linkData}));\n    }\n\n    return (\n        <CSSTransition\n      nodeRef={slideRef}\n        in={inProp}\n        onExited={move}\n        timeout={{\n          appear: 550,\n          exit: 550\n        }}\n        appear={true}\n        classNames={{\n          appearActive: entryDirection === \"next\" ?  \"animate__animated animate__slideInRight\" : \"animate__animated animate__slideInLeft\",\n          exitActive:  moveDirection === \"next\" ? \"animate__animated animate__fadeOutLeft\" : \"animate__animated animate__fadeOutRight\"\n        }}\n      >\n        <div ref={slideRef} className=\"\">\n            {console.log(\"component render\")}\n            {/* {console.log(currentSelection)} */}\n            {showSelect && \n                <Select values={values} onSelect={handleSelection} labelCharacters={38} />\n            }\n            <p className=\"mt-4 text-md font-semibold\">Enter URL(s) containing backlinks to your site</p>\n            <p className=\"text-sm italic\">(You can skip this step if you like by clicking next)</p>\n            <textarea\n            onChange={saveLinks}\n            placeholder={'https://example1.com/my_link_is_here.html\\nhttps://example2.com/my_link_is_also_here.html'}\n            value={linkData[currentSelection.value].urls}\n                name=\"\"\n                id=\"\"\n                cols=\"\"\n                rows=\"10\"\n                className=\"mt-3 resize-none rounded-md shadow-sm inline-flex justify-center w-full rounded-md border border-gray-300 px-4 py-2 bg-white text-sm leading-5 font-medium focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-50 active:text-gray-800 transition ease-in-out duration-150\"></textarea>\n            <p className=\"text-sm italic\">(We will check up to 1,000 per day for free)</p>\n            <p className=\"mt-4 text-md font-semibold\">Tag these URLs (optional)</p>\n            {/* {console.log(\"provider\")}\n            {console.log(linkData[currentSelection.value].provider)}\n            {console.log(linkData)} */}\n            <TextInput placeHolder=\"ABC Link Vendor\" hideValidation={true} value={linkData[currentSelection.value].provider} onChange={handleProvider} />\n            <p className=\"text-sm italic mb-8\">(If you add a provider name here later on you can run reports just on this provider)</p>\n            <Buttons\n                    back={true}\n                    next={true}\n                    // movePrev={props.movePrev}\n                    // moveNext={props.moveNext}\n                    movePrev={startMoveback}\n                    moveNext={startMoveNext}\n                    \n                    />\n        </div>\n        </CSSTransition>\n    )\n}","import React, { useState } from \"react\";\nimport ReactCSSTransitionGroup from \"react-transition-group\";\nimport \"./styles.css\";\nimport SelectType from \"./steps/SelectType\";\nimport EnterDomaiun from \"./steps/EnterDomain\";\nimport Error from \"./steps/Error\";\nimport CreateAccount from \"./steps/CreateAccount\";\nimport GscVerify from './steps/GscVerify';\nimport SelectGscDomains from \"./steps/SelectGscDomains\";\nimport SetupComplete from \"./steps/SetupComplete\";\nimport TrackBacklinks from \"./steps/TrackBacklinks\";\n\n\nexport default function App() {\n  const [details, setDetails] = useState({\n    title: \"Create Account\",\n    name: null,\n    accountType: null,\n    // domains: [\"example1.com\", \"examfffffffffffsssssssssssssssssssssssssssssssssssffffffffple2.com\", \"example3.com\"],\n    domains: [],\n    links: {},\n    email: null,\n    password: null,\n    gscToken: null\n  });\n\n  const [currentSlide, setCurrentSlide] = useState(\"SelectType\");\n  const [lastValue, setLastValue] = useState(null);\n  const [formState, setFormState] = useState({name: \"\"});\n  const [slideHistory, setSlideHistory] = useState([])\n  const [entryDirection, setEntryDirection] = useState(\"next\");\n\n  let getCurrentComponentString = () => {\n    return slideHistory[slideHistory.length - 1];\n  };\n\n  const slideConnections = {\n    SelectType : {\n      title: \"Get Started\",\n      component: <SelectType prev={false} next={true} movePrev={movePrev} moveNext={moveNext} state={details} setState={setDetails} entryDirection={entryDirection} />,\n      free: \"CreateAccount\",\n      pro: \"EnterDomain\",\n      height:{\n        0: \"600px\"\n      }\n    },\n    EnterDomain: {\n      title: \"Get Started\",\n      next: \"TrackBacklinksPro\",\n      component: <EnterDomaiun prev={true} next={false} movePrev={movePrev} moveNext={moveNext} state={details} setState={setDetails} entryDirection={entryDirection} />,\n      height:{\n        0: \"370px\"\n      }\n      //todo\n    },\n    CreateAccount: {\n      title: \"Create Account\",\n      component: <CreateAccount prev={true} next={false} movePrev={movePrev} moveNext={moveNext} state={details} setState={setDetails} entryDirection={entryDirection} />,\n      next: \"GscVerify\",\n      height:{\n        0: \"640px\"\n      }\n    },\n    GscVerify: {\n      title: \"Import Domains\",\n      component: <GscVerify prev={false} next={false} movePrev={movePrev} moveNext={moveNext} state={details} setState={setDetails} entryDirection={entryDirection} />,\n      next: \"SelectGscDomains\",\n      height:{\n        0: \"310px\"\n      }\n    },\n    SelectGscDomains : {\n      title: \"Select Domains\",\n      component: <SelectGscDomains prev={false} showPrev={false} next={false} movePrev={movePrev} moveNext={moveNext} state={details} setState={setDetails} entryDirection={entryDirection} />,\n      next: \"TrackBacklinksFree\",\n      height:{\n        0: \"540px\"\n      }\n    },\n    SetupComplete: {\n      title: \"Setup Complete\",\n      component: <SetupComplete state={details} />,\n      height:{\n        0: \"580px\"\n      }\n    },\n    TrackBacklinksFree: {\n      title: \"Add URLs\",\n      component: <TrackBacklinks movePrev={movePrev} moveNext={moveNext} state={details} setState={setDetails} entryDirection={entryDirection} />,\n      next: \"SetupComplete\",\n      height:{\n        0: \"615px\"\n      }\n    },\n    TrackBacklinksPro: {\n      title: \"Add URLs\",\n      component: <TrackBacklinks showSelect={false} movePrev={movePrev} moveNext={moveNext} state={details} setState={setDetails} entryDirection={entryDirection} />,\n      next: \"SetupComplete\",\n      height:{\n        0: \"600px\"\n      }\n    }\n  }\n\n  function getSlide(){\n\n    console.log(\"Current slide: \" + currentSlide);\n    return slideConnections[currentSlide].component;\n\n  }\n\n  function moveNext(val = null){\n\n    setSlideHistory(prev => [...prev, currentSlide]);\n\n    if(val === null){\n      setCurrentSlide(prev => slideConnections[prev].next)\n    }\n    else{\n      setCurrentSlide(prev => slideConnections[prev][val])\n    }\n    \n    setLastValue(val);\n  }\n\n  function movePrev(){\n\n    setSlideHistory((prev) => {\n      const newSH = [...prev]\n      newSH.pop()\n      return newSH\n    })\n\n    setCurrentSlide(slideHistory[slideHistory.length - 1]);\n  }\n\n  function getHeight(height) {\n    let h = \"\";\n\n    for (const w in height) {\n      if (w < window.innerWidth) h = height[w];\n    }\n\n    return h;\n  }\n\n  const wizardStyle = {\n    height: getHeight(slideConnections[currentSlide].height)\n  }\n\n  // let currentComponent = getComponent(getCurrentComponentString());\n\n  return (\n    <div className=\"min-h-screen bg-gray-200 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n      <img className=\"mx-auto h-12 w-auto\" src=\"https://tailwindui.com/img/logos/v1/workflow-mark-on-white.svg\" alt=\"Workflow\" />\n        <h2 className=\"mt-6 text-center text-3xl leading-9 font-extrabold text-gray-900\">\n          {slideConnections[currentSlide].title}\n        </h2>\n      </div>\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div style={wizardStyle} className=\"transition-all duration-500 ease-in-out  overflow-hidden bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          {getSlide()}\n          {console.log(\"render\")}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}