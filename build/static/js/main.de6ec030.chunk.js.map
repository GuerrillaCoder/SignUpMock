{"version":3,"sources":["steps/components/SubHead.jsx","steps/SelectType.jsx","steps/components/Buttons.jsx","steps/components/TextInput.jsx","helpers/url-helper.js","steps/EnterDomain.jsx","steps/Error.jsx","steps/CreateAccount.jsx","steps/GscVerify.jsx","App.jsx","index.js"],"names":["SubHead","props","className","text","SelectType","useState","inProp","setInProp","val","setVal","freeOptionRef","useRef","proOptionRef","moveNext","console","log","handleMove","CSSTransition","nodeRef","in","onExited","timeout","appear","exit","classNames","appearActive","exitActive","ref","onClick","type","fill","viewBox","xmlns","fillRule","d","clipRule","Buttons","movePrev","back","next","TextInput","labelRef","label","htmlFor","onChange","id","placeholder","placeHolder","required","showValidation","mountOnEnter","unmountOnExit","enter","appearDone","enterActive","enterDone","exitDone","valMessage","isUrl","str","test","EnterDomain","nextEnable","setNextEnable","prev","domainRef","setShowValidation","handleChange","event","target","value","clearTimeout","window","validateTimer","setTimeout","validate","Error","CreateAccount","emailValid","setEmailValid","passValid","setPassValid","emailValidationMessage","setEmailValidationMessage","passValidationMessage","setPassValidationMessage","slideRef","action","method","EmailValidator","validateEmail","length","validatePass","src","alt","GscVerify","App","title","step","name","accountType","domain","links","username","password","gscToken","details","setDetails","slideHistory","setSlideHistory","branchHistory","setBranchHistory","getCurrentComponentString","option","nextSlide","newSH","pop","newBH","componentName","startAgain","getComponent","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.de6ec030.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function SubHead(props) {\r\n  return <h3 className=\"font-medium text-xl text-center\">{props.text}</h3>;\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport SubHead from \"./components/SubHead\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport default function SelectType(props) {\r\n  const [inProp, setInProp] = useState(true);\r\n  const [val, setVal] = useState(null);\r\n  const freeOptionRef = useRef(null);\r\n  const proOptionRef = useRef(null);\r\n\r\n  let selectedOutAnimation = \"animate__animated animate__fadeOut\";\r\n  let notSelectedOutAnimation = \"animate__animated animate__fadeOutLeft\";\r\n\r\n  function moveNext() {\r\n    console.log(\"Moving next from SelectType value: \" + val);\r\n    props.moveNext(val);\r\n  }\r\n\r\n  function handleMove(val) {\r\n    setVal(val);\r\n    setInProp(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n      nodeRef={freeOptionRef}\r\n        in={inProp}\r\n        onExited={() => moveNext()}\r\n        timeout={{\r\n          appear: 2000,\r\n          exit: 750\r\n        }}\r\n        appear={true}\r\n        classNames={{\r\n          appearActive: \"animate__animated animate__zoomIn\",\r\n          exitActive:\r\n            val === \"free\" ? selectedOutAnimation : notSelectedOutAnimation\r\n        }}\r\n      >\r\n        <div ref={freeOptionRef}>\r\n          <SubHead text=\"Free Account\" />\r\n\r\n          <div className=\"w-8/12 mx-auto mt-4\">\r\n            <ul className=\"list-disc\">\r\n              <li className=\"mb-1\">\r\n                Verify domain ownership with Google Search Console (Required)\r\n              </li>\r\n              <li className=\"mb-1\">Track up to 3 domains for free</li>\r\n              <li className=\"mb-1\">1,000 URLs per domain watched</li>\r\n              <li className=\"mb-1\">Free Forever</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <button\r\n            onClick={() => handleMove(\"free\")}\r\n            type=\"submit\"\r\n            className=\"mt-8 mx-auto flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition duration-150 ease-in-out\"\r\n          >\r\n            Start Free\r\n            <svg\r\n              className=\"ml-2 w-6 h-6\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                clipRule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n      nodeRef={proOptionRef}\r\n        in={inProp}\r\n        onExited={() => moveNext()}\r\n        timeout={{\r\n          appear: 2000,\r\n          exit: 1000\r\n        }}\r\n        appear={true}\r\n        classNames={{\r\n          appearActive: \"animate__animated animate__zoomIn\",\r\n          exitActive:\r\n            val === \"pro\" ? selectedOutAnimation : notSelectedOutAnimation\r\n        }}\r\n      >\r\n        <div ref={proOptionRef} className=\"mt-6\">\r\n          <div className=\"relative mb-4\">\r\n            <div className=\"absolute inset-0 flex items-center\">\r\n              <div className=\"w-full border-t border-gray-300\" />\r\n            </div>\r\n            <div className=\"relative flex justify-center text-sm leading-5\">\r\n              <span className=\"px-2 bg-white text-gray-500\">Or</span>\r\n            </div>\r\n          </div>\r\n\r\n          <SubHead text=\"Pro Account\" />\r\n\r\n          <div className=\"w-8/12 mx-auto mt-4\">\r\n            <ul className=\"list-disc\">\r\n              <li className=\"mb-1\">No verification required</li>\r\n              <li className=\"mb-1\">Additional domains $7 each</li>\r\n              <li className=\"mb-1\">10,000 links watched per domain</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"mt-8 mx-auto flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition duration-150 ease-in-out\"\r\n            onClick={() => handleMove(\"pro\")}\r\n          >\r\n            Choose Pro ($7)\r\n            <svg\r\n              className=\"ml-2 w-6 h-6\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                clipRule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Buttons(props) {\r\n  // const [status, setStatus] = useState({\r\n\r\n  // });\r\n\r\n  let nextEnabled =\r\n    \"inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition ease-in-out duration-150\";\r\n  let nextDisabled =\r\n    \"cursor-not-allowed  inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-gray-300 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition ease-in-out duration-150\";\r\n  let backEnabled =\r\n    \"inline-flex items-center px-4 py-2 border border-gray-300 text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:text-gray-800 active:bg-gray-50 transition ease-in-out duration-150\";\r\n  let backDisabled =\r\n    \"cursor-not-allowed  inline-flex items-center px-4 py-2 border border-gray-300 text-sm leading-4 font-medium rounded-md text-gray-400 bg-white  transition ease-in-out duration-150\";\r\n\r\n  return (\r\n    <div className=\"buttons mt-4\">\r\n      <span className=\"float-left rounded-md shadow-sm\">\r\n        <button\r\n          onClick={props.movePrev}\r\n          type=\"button\"\r\n          className={props.back === true ? backEnabled : backDisabled}\r\n        >\r\n          <svg\r\n            className=\"mr-1 h-5 w-5\"\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 20 20\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\r\n              clipRule=\"evenodd\"\r\n            ></path>\r\n          </svg>\r\n          Back\r\n        </button>\r\n      </span>\r\n      <span className=\"float-right rounded-md shadow-sm\">\r\n        <button\r\n          type=\"button\"\r\n          className={props.next === true ? nextEnabled : nextDisabled}\r\n          onClick={props.moveNext}\r\n        >\r\n          Next\r\n          <svg\r\n            className=\"ml-2 -mr-1 h-5 w-5\"\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 20 20\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n              clipRule=\"evenodd\"\r\n            ></path>\r\n          </svg>\r\n        </button>\r\n      </span>\r\n      <div className=\"clear-both\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\n\r\nexport default function TextInput(props) {\r\n\r\n  const labelRef = useRef(null);\r\n\r\n  return (\r\n    <div>\r\n\r\n      {props.label &&\r\n        <label\r\n          htmlFor=\"email\"\r\n          className=\"block text-sm font-medium leading-5 text-gray-700\"\r\n        >\r\n          {props.label}\r\n        </label>\r\n      }\r\n      <div className=\"mt-1 rounded-md shadow-sm z-10\">\r\n        <input\r\n        \r\n        onChange={props.onChange}\r\n          id={props.id}\r\n          type={props.type ?? \"text\"}\r\n          className=\"appearance-none z-10 relative block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:shadow-outline-blue focus:border-blue-300 transition duration-150 ease-in-out sm:text-sm sm:leading-5\"\r\n          placeholder={props.placeHolder}\r\n          required={props.required ?? false}\r\n          \r\n        />\r\n        </div>\r\n        <div className=\"h-6\">\r\n        <CSSTransition\r\n          in={props.showValidation ?? false}\r\n          mountOnEnter\r\n          unmountOnExit\r\n          // in={true}\r\n          // timeout={{\r\n          //   appear: 1000,\r\n          // }}\r\n          timeout={{\r\n            appear: 0,\r\n            enter: 0,\r\n            exit: 800,\r\n           }}\r\n          appear={true}\r\n          nodeRef={labelRef}\r\n          classNames={{\r\n            appear: 'my-appear',\r\n            appearActive: 'animate__animated animate__fadeInDown',\r\n            appearDone: 'my-done-appear',\r\n            enter: 'my-enter',\r\n            enterActive: 'animate__animated animate__slideInDown',\r\n            enterDone: 'animate__animated animate__slideInDown',\r\n            exit: 'animate__animated animate__slideOutUp',\r\n            exitActive: 'animate__animated animate__slideOutUp',\r\n            exitDone: 'animate__animated animate__slideOutUp',\r\n           }}\r\n        >\r\n          <div ref={labelRef} \r\n          // className={(props.showValidation ? \"\" : \"opacity-0\") + \" z-0\"}\r\n          >\r\n          <p className={\" validation text-sm mb-1 text-red-600 z-0 h-6\"}>\r\n            {props.valMessage}\r\n          </p>\r\n          </div>\r\n\r\n        </CSSTransition>\r\n        </div>\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n","export default function isUrl(str) {\r\n  let regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\r\n  if (regexp.test(str)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport Buttons from \"./components/Buttons\";\r\nimport TextInput from \"./components/TextInput\";\r\nimport isValidDomain from \"is-valid-domain\";\r\nimport isUrl from \"../helpers/url-helper\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport default function EnterDomain(props) {\r\n  const [valMessage, setValMessage] = useState(\"invisible\");\r\n  const [nextEnable, setNextEnable] = useState(props.next);\r\n  const [prevEnable, setPrevEnable] = useState(props.prev);\r\n  const [inProp, setInProp] = useState(true);\r\n  const domainRef = useRef(null);\r\n\r\n  const [showValidation, setShowValidation] = useState(false);\r\n\r\n  function validate(val) {\r\n    // console.log(\"Validate \" + val);\r\n    // if (!isUrl(val)) {\r\n    //   setValMessage(\"\");\r\n    // }\r\n    // else {\r\n    //   setValMessage(\"invisible\");\r\n    // }\r\n\r\n    if (!isUrl(val) && !showValidation) {\r\n      setShowValidation(true);\r\n    }\r\n    \r\n    if (isUrl(val) && showValidation) {\r\n      setShowValidation(false);\r\n    }\r\n  }\r\n\r\n  function handleChange(event) {\r\n    if (isUrl(event.target.value)) {\r\n      // console.log(event.target.value + \" is url\");\r\n      setNextEnable(true);\r\n    } else {\r\n      setNextEnable(false);\r\n      // console.log(event.target.value + \" is NOT url\");\r\n    }\r\n    \r\n    clearTimeout(window.validateTimer);\r\n    window.validateTimer = setTimeout(\r\n      (val) => {\r\n        // console.log(\"Trigger:\" + val);\r\n        validate(val);\r\n      },\r\n      1000,\r\n      event.target.value\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CSSTransition\r\n    nodeRef={domainRef}\r\n      in={inProp}\r\n      // onExited={() => moveNext()}\r\n      timeout={{\r\n        appear: 2000,\r\n        exit: 1000\r\n      }}\r\n      appear={true}\r\n      classNames={{\r\n        appearActive: \"animate__animated animate__slideInRight\"\r\n        // exitActive:\r\n        //   val === \"free\" ? selectedOutAnimation : notSelectedOutAnimation\r\n      }}\r\n    >\r\n      <div ref={domainRef}>\r\n        <h3 className=\"font-medium text-xl text-center mb-4\">Enter Domain</h3>\r\n        <p className=\"mb-4\">\r\n          Enter the domain that you want to monitor backlinks for (ownership\r\n          verification with GSC is required for free accounts)\r\n        </p>\r\n\r\n        <TextInput \r\n          showValidation={showValidation} \r\n          valMessage=\"Please enter a valid domain to continue\"  \r\n          placeHolder=\"https://example.com\"\r\n          label=\"Domain\"\r\n          onChange={(event) => handleChange(event)}\r\n        />\r\n        <p className=\"mb-8 text-sm italic\">\r\n          You will be able to add in more domains to track later\r\n        </p>\r\n        <Buttons\r\n          back={true}\r\n          next={nextEnable}\r\n          movePrev={props.movePrev}\r\n          moveNext={props.moveNext}\r\n        />\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\n//todo: an error has occurred click here to start over\r\n//todo: add logging\r\nexport default function Error(props) {\r\n  return <h1>ERROR</h1>;\r\n}\r\n","import React, {useState, useRef} from \"react\";\r\nimport Buttons from \"./components/Buttons\";\r\nimport SubHead from \"./components/SubHead\";\r\nimport TextInput from \"./components/TextInput\";\r\nimport * as EmailValidator from 'email-validator';\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport default function CreateAccount(props) {\r\n\r\n    const [emailValid, setEmailValid] = useState(false);\r\n    const [passValid, setPassValid] = useState(false);\r\n    const [emailValidationMessage, setEmailValidationMessage] = useState(null);\r\n    const [passValidationMessage, setPassValidationMessage] = useState(null);\r\n    const slideRef= useRef(null);\r\n    const [inProp, setInProp] = useState(true);\r\n\r\n    function nextEnable() {\r\n        return false;\r\n    }\r\n\r\n    function validateEmail(event) {\r\n        clearTimeout(window.validateTimer);\r\n        window.validateTimer = setTimeout((val) => {\r\n            if (EmailValidator.validate(val)) {\r\n                setEmailValid(true);\r\n            } else {\r\n                setEmailValidationMessage(\"Please enter a valid email address\")\r\n                setEmailValid(false);\r\n            }\r\n        }, 1000, event.target.value);\r\n    }\r\n\r\n    function validatePass(event) {\r\n        clearTimeout(window.validateTimer);\r\n        window.validateTimer = setTimeout((val) => {\r\n            if (val.length >= 6) {\r\n                setPassValid(true);\r\n            } else {\r\n                setPassValidationMessage(\"Password must be 6 or more characters\")\r\n                setPassValid(false);\r\n            }\r\n        }, 1000, event.target.value);\r\n    }\r\n\r\n    return (\r\n      <CSSTransition\r\n      nodeRef={slideRef}\r\n        in={inProp}\r\n        // onExited={() => moveNext()}\r\n        timeout={{\r\n          appear: 2000,\r\n          exit: 1000\r\n        }}\r\n        appear={true}\r\n        classNames={{\r\n          appearActive: \"animate__animated animate__slideInRight\"\r\n          // exitActive:\r\n          //   val === \"free\" ? selectedOutAnimation : notSelectedOutAnimation\r\n        }}\r\n      >\r\n        <div ref={slideRef}>\r\n            <SubHead text=\"Create a login to add links to watch\"/>\r\n\r\n            <div className=\"mt-6\">\r\n                <form className=\"mb-8\" action=\"#\" method=\"POST\">\r\n                    <div>\r\n                        <TextInput\r\n                            showValidation={(emailValid === false && emailValidationMessage !== null)}\r\n                            valMessage={emailValidationMessage}\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            required={true}\r\n                            label=\"Email Address\"\r\n                            onChange={(event) => validateEmail(event)}/>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <TextInput\r\n                            showValidation={(passValid === false && passValidationMessage !== null)}\r\n                            // showValidation={true}\r\n                            valMessage={passValidationMessage}\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            required={true}\r\n                            label=\"Password\"\r\n                            onChange={(event) => validatePass(event)}/>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n                <Buttons\r\n                    back={true}\r\n                    next={emailValid && passValid}\r\n                    movePrev={props.movePrev}\r\n                    moveNext={props.moveNext}/>\r\n                <div className=\"mt-6\">\r\n                    <div className=\"relative\">\r\n                        <div className=\"absolute inset-0 flex items-center\">\r\n                            <div className=\"w-full border-t border-gray-300\"/>\r\n                        </div>\r\n                        <div className=\"relative flex justify-center text-sm leading-5\">\r\n                            <span className=\"px-2 bg-white text-gray-500\">\r\n                                Or continue with\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text-center w-3/4 mx-auto\">\r\n                        <img onClick={props.moveNext} className=\"mx-auto h-14 mt-3\" src=\"img/google-signin.png\" alt=\"\"/>\r\n                        <img onClick={props.moveNext} className=\"mx-auto h-12 mt-3\" src=\"img/facebook_login.png\" alt=\"\"/>\r\n                        <img onClick={props.moveNext} className=\"mx-auto mt-3\" src=\"img/signin-button-linkedin.png\" alt=\"\"/>\r\n                        <img onClick={props.moveNext} className=\"mx-auto mt-3\" src=\"img/sign-in-with-twitter.png\" alt=\"\"/>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        </CSSTransition>\r\n    );\r\n}\r\n","import React, { useState, useRef } from \"react\";\nimport Buttons from \"./components/Buttons\";\nimport { CSSTransition } from \"react-transition-group\";\nimport SubHead from \"./components/SubHead\";\n\n\nexport default function GscVerify(props)\n{\n\n    return (<div>\n        <SubHead text=\"To track backlinks for free you can import up to 3 domains from Google Search Console.\" />\n\n        <img src=\"img/gsc.png\" alt=\"\"/>\n    </div>);\n}","import React, { useState } from \"react\";\nimport ReactCSSTransitionGroup from \"react-transition-group\";\nimport \"./styles.css\";\nimport SelectType from \"./steps/SelectType\";\nimport EnterDomaiun from \"./steps/EnterDomain\";\nimport Error from \"./steps/Error\";\nimport CreateAccount from \"./steps/CreateAccount\";\nimport GscVerify from './steps/GscVerify';\n\nclass slide {}\n\nexport default function App() {\n  const [details, setDetails] = useState({\n    title: \"Create Account\",\n    step: 1,\n    // branchHistory: [\"Start\"],\n    // slideHistory: [\"SelectType\"],\n    name: null,\n    accountType: null,\n    domain: null,\n    links: null,\n    username: null,\n    password: null,\n    gscToken: null\n  });\n\n  const [slideHistory, setSlideHistory] = useState([\"SelectType\", \"CreateAccount\", \"GscVerify\"])\n  const [branchHistory, setBranchHistory] = useState([\"Start\", \"Free\", \"Free\"])\n\n  let getCurrentComponentString = () => {\n    return slideHistory[slideHistory.length - 1];\n  };\n\n  let getCurrentBranch = () => {\n    return branchHistory[branchHistory.length - 1];\n  };\n\n  function getComponent(componentName) {\n    console.log(\"name: \" + componentName);\n    switch (componentName) {\n      case \"SelectType\":\n        return <SelectType moveNext={moveNext} />;\n      case \"EnterDomain\":\n        return (\n          <EnterDomaiun\n            moveNext={moveNext}\n            movePrev={movePrev}\n            next={false}\n            prev={true}\n          />\n        );\n      case \"CreateAccount\":\n        return (\n          <CreateAccount\n            moveNext={moveNext}\n            movePrev={movePrev}\n            next={false}\n            prev={true}\n          />\n        );\n        case \"GscVerify\":\n        return (\n          <GscVerify\n            moveNext={moveNext}\n            movePrev={movePrev}\n            next={false}\n            prev={true}\n          />\n        );\n\n      default:\n        return <Error startAgain=\"SelectType\" />;\n    }\n  }\n\n  let moveNext = (option) => {\n    console.log(\"moving next: \" + getCurrentComponentString());\n    console.log(details);\n    switch (getCurrentComponentString()) {\n      case \"SelectType\":\n        let nextSlide = option === \"free\" ? \"CreateAccount\" : \"EnterDomain\";\n        setSlideHistory((prev) => [...prev, nextSlide])\n        setBranchHistory((prev) => [...prev, option])\n        setDetails((details) => ({\n          ...details,\n          title: option === \"free\" ? \"Create Account\" : \"Get Started\"\n        }));\n        console.log(details);\n        break;\n      case \"CreateAccount\":\n        setSlideHistory((prev) => [...prev, \"GscVerify\"]);\n        setBranchHistory((prev) => [...prev, getCurrentBranch()]);\n        setDetails((details) => ({\n          ...details,\n          title: \"Add Domains\"\n        }));\n        break;\n      default:\n        setSlideHistory((prev) => [...prev, \"Error\"])\n    }\n  };\n\n  let movePrev = () => {\n    console.log(\"moving back\");\n\n    setSlideHistory((prev) => {\n      const newSH = [...prev]\n      newSH.pop()\n      return newSH\n    })\n\n    setBranchHistory((prev) => {\n      const newBH = [...prev]\n      newBH.pop()\n      return newBH\n    })\n  };\n\n  // let currentComponent = getComponent(getCurrentComponentString());\n\n  return (\n    <div className=\"min-h-screen bg-gray-200 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <img\n          className=\"mx-auto h-12 w-auto\"\n          src=\"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\"\n          alt=\"Workflow\"\n        />\n        <h2 className=\"mt-6 text-center text-3xl leading-9 font-extrabold text-gray-900\">\n          {details.title}\n        </h2>\n      </div>\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"transition-all overflow-hidden bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          {getComponent(getCurrentComponentString())}\n          {console.log(\"render\")}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}